name: Deploy to vercel in PROD MAIN
env:
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORGID}}
  VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECTID}}
on:
  workflow_dispatch:
  push:
    branches:
      - MAIN
permissions:
  contents: write
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.read_version.outputs.version}}
    if: ${{github.ref == 'refs/heads/MAIN'}}
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/checkout@v2
      - name: Use Node.js 20.8.1
        uses: actions/setup-node@v2
        with:
          node-version: 20.8.1
      - run: npm ci --force
      - name: Get next version
        id: read_version
        run: echo "version=$(npm run semantic-release --dry-run  | grep -oP 'Published release \K.*? ' | sed 's/[[:space:]]*$//')" >> $GITHUB_OUTPUT 
        env:
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
          GH_TOKEN: ${{secrets.GH_SEMANTIC_TOKEN}}

      - name: Update Version
        if: ${{ steps.read_version.outputs.version }}
        run: npm version ${{ steps.read_version.outputs.version }} --no-git-tag-version --allow-same-version
        env:
          credentials: ${{secrets.GH_SEMANTIC_TOKEN}}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel environment informations
        run: vercel pull --yes --environment=production --token=${{secrets.VERCEL_TOKEN}}
      - name: Build project
        run: vercel build --local-config ./vercel.json --prod --token=${{secrets.VERCEL_TOKEN}}
      - name: Deploy project to Vercel
        run: vercel deploy --prebuilt --prod --token=${{secrets.VERCEL_TOKEN}}


  # Uncomment this section if you want to release on main

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build_and_deploy
  #   if: |
  #     always() && 
  #     (needs.build_and_deploy.result == 'success')
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js 20.8.1
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 20.8.1
  #     - run: npm ci --force
  #     - run: npm run semantic-release
  #       env:
  #         NPM_TOKEN: ${{secrets.NPM_TOKEN}}
  #         GH_TOKEN: ${{secrets.GH_SEMANTIC_TOKEN}}
  #         update_db_version:
  #         runs-on: ubuntu-latest
